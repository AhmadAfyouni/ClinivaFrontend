import { useFormik } from "formik";
import AddPatientType from "../../types/AddPatientType";
import AddUserSchema from "../../schema/AddUserSchema";
import InputForm from "../../Components/Inputs/InputForm";
import InputPropsType from "../../types/InputsType";
import { ScrollArea } from "@mantine/core";
import { country } from "../../data/country";

function AddPatient() {
  const handleImageChange = (file: File | null) => {
    formik.setFieldValue("image", file);
  };

  const formik = useFormik<AddPatientType>({
    initialValues: {
      address: "",
      blood_type: "",
      created_at: new Date(),
      dateOfBirth: new Date(),
      email: "",
      emergencyContact: "",
      gender: "",
      height: 0,
      identity: "",
      image: "",
      insurances: "",
      is_active: true,
      marital_status: "",
      name: "",
      nationality: "",
      notes: "",
      number_children: 0,
      phone: "",
      updated_at: new Date(),
      weight: 0,
    },
    validationSchema: AddUserSchema,
    validateOnBlur: false,
    validateOnChange: false,
    onSubmit: (values) => {
      console.log("Form Submitted:", values);
    },
  });

  const attrb: InputPropsType[] = [
    {
      id: "name",
      label: "name",
      mandatory: true,
      type: "text",
      description: "",
      error: formik.errors.name,
      placeholder: "Kaled",
      tooltip: "Enter the name",
      value: formik.values.name || "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
    },
    {
      id: "phone",
      label: "Phone",
      mandatory: true,
      type: "number",
      description: "",
      error: formik.errors.phone,
      placeholder: "099996666",
      tooltip: "Enter your phone",
      value: formik.values.phone || "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
    },
    {
      id: "email",
      label: "Email Address",
      mandatory: true,
      type: "text",
      description: "",
      error: formik.errors.email,
      placeholder: "Example@gmail.com",
      tooltip: "Enter your Email Address",
      value: formik.values.phone || "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
    },
    {
      id: "dateOfBirth",
      label: "Date Of Birth",
      mandatory: true,
      type: "date",
      description: "",
      error: formik.errors.dateOfBirth,
      placeholder: "",
      value: "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
    },
    {
      id: "gender",
      label: "Gender",
      mandatory: true,
      type: "radio",
      description: "",
      error: formik.errors.gender,
      placeholder: "",
      value: formik.values.gender || "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
      radio: [
        { label: "Female", value: "female" },
        { label: "Male", value: "male" },
      ],
    },
    {
      id: "image",
      label: "Profile Image",
      mandatory: false,
      type: "image",
      description: "",
      error: formik.errors.image,
      placeholder: "",
      value: formik.values.image || "",
      onChangeFile: handleImageChange,
      onChange: () => {},
    },
    {
      id: "identity",
      label: "identity",
      mandatory: false,
      type: "text",
      description: "",
      error: formik.errors.identity,
      placeholder: "0011232111254",
      tooltip: "Enter your identity",
      value: formik.values.identity || "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
    },

    {
      id: "nationality",
      label: "Nationality",
      mandatory: false,
      type: "select",
      description: "",
      error: formik.errors.nationality,
      placeholder: "Syrian",
      tooltip: "Enter your nationality",
      value: formik.values.nationality || "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
      selectValue: country,
    },
    {
      id: "address",
      label: "Address",
      mandatory: true,
      type: "text",
      description: "",
      error: formik.errors.address,
      placeholder: "Aleppo , street 10",
      tooltip: "Enter your address",
      value: formik.values.address || "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
    },
    {
      id: "marital_status",
      label: "Marital Status",
      mandatory: false,
      type: "radio",
      description: "",
      error: formik.errors.marital_status,
      placeholder: "",
      value: formik.values.marital_status || "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
      radio: [
        { label: "Single", value: "Single" },
        { label: "Married", value: "Married" },
        { label: "Divorced", value: "Divorced" },
        { label: "Widowed", value: "Widowed" },
      ],
    },
    {
      id: "number_children",
      label: "Number Children",
      mandatory: false,
      type: "number",
      description: "",
      error: formik.errors.number_children,
      placeholder: "0",
      tooltip: "Enter your Number Children",
      value: "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
    },
    {
      id: " blood_type",
      label: " Blood Type",
      mandatory: false,
      type: "radio",
      description: "",
      error: formik.errors.blood_type,
      placeholder: "",
      value: formik.values.blood_type || "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
      radio: [
        { label: "A+", value: "A+" },
        { label: "B+", value: "B+" },
        { label: "A-", value: "A-" },
        { label: "B-", value: "B-" },
        { label: "AB-", value: "AB-" },
        { label: "AB+", value: "AB+" },
        { label: "O+", value: "O+" },
        { label: "O-", value: "O-" },
      ],
    },
    {
      id: "height",
      label: "height",
      mandatory: false,
      type: "number",
      description: "",
      error: formik.errors.height,
      placeholder: "0",
      tooltip: "Enter your height",
      value: "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
    },
    {
      id: "weight",
      label: "Weight",
      mandatory: false,
      type: "number",
      description: "",
      error: formik.errors.weight,
      placeholder: "0",
      tooltip: "Enter your Weight",
      value: "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
    },
    {
      id: "emergencyContact",
      label: "Emergency Contact",
      mandatory: false,
      type: "number",
      description: "",
      error: formik.errors.emergencyContact,
      placeholder: "",
      tooltip: "Enter your Emergency Contact",
      value: "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
    },
    {
      id: "notes",
      label: "Notes",
      mandatory: false,
      type: "areaText",
      description: "",
      error: formik.errors.notes,
      placeholder: "note:",
      tooltip: "Enter your Notes",
      value: "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
    },
    {
      id: "insurances",
      label: "Insurances",
      mandatory: false,
      type: "text",
      description: "",
      error: formik.errors.insurances,
      placeholder: "",
      tooltip: "Enter your Insurances",
      value: "",
      onChange: formik.handleChange,
      onBlur: formik.handleBlur,
    },
  ];
  console.log("Formik values:", formik.values);
  console.log("Formik errors:", formik.errors);
  return (
    <ScrollArea h="calc(100vh - 80px)" w="100%">
      <InputForm base={attrb} count={0} onSubmit={formik.handleSubmit} />
    </ScrollArea>
  );
}

export default AddPatient;
